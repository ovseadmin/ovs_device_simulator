'use strict';

var mqtt = require('mqtt');
var config = require('./config');
var utils = require('./utils');
var colors = require('colors');

var serialNo = config.username; // contents of message body 
// 임의 gps값 생성
/*
var latitudeValue= [ 37.509141, 37.510296, 37.511334, 37.512353, 37.513743, 37.514770, 37.516314, 37.517931, 37.519846, 37.520759, 
    37.522624, 37.524782, 37.526018, 37.527895, 37.528641, 37.529740, 37.530824, 37.531986, 37.533009, 37.532616,
    37.531939, 37.531624, 37.531418, 37.530502, 37.527543, 37.526463, 37.525050, 37.523405, 37.521730, 37.520683,
    37.519330, 37.518079, 37.516871, 37.516062, 37.515373, 37.515084, 37.514828, 37.514556, 37.514016, 37.513697,
    37.513428, 37.513010, 37.511564, 37.510118, 37.508683, 37.506780, 37.507256, 37.507813, 37.508235, 37.508747 ];
var longitudeValue= [ 127.063228, 127.062512, 127.061969, 127.061426, 127.060685, 127.060067, 127.059200, 127.058356, 127.057246, 127.056837, 
     127.055780, 127.054697, 127.054908, 127.056011, 127.056456, 127.057057, 127.057673, 127.058318, 127.059712, 127.061573,
     127.063994, 127.065731, 127.066625, 127.066153, 127.064765, 127.064304, 127.063639, 127.062914, 127.063069, 127.063960,
     127.065430, 127.066148, 127.066492, 127.066610, 127.066717, 127.065204, 127.063488, 127.061846, 127.059270, 127.057246,
     127.055474, 127.053350, 127.054029, 127.054846, 127.055550, 127.056604, 127.058326, 127.060275, 127.061543, 127.063367 ];
*/

// for ex-CITS test
// southbound - test_01.sh / 790 points
var latitudeValue = [37.403959, 37.404001, 37.404044, 37.404087, 37.404129, 37.404172, 37.404195, 37.404219, 37.404242, 37.404266, 37.404208, 37.404151, 37.404093, 37.404036, 37.403949, 37.403862, 37.403776, 37.403689, 37.403602, 37.403516, 37.403503, 37.403490, 37.403477, 37.403464, 37.403375, 37.403286, 37.403196, 37.403107, 37.402945, 37.402783, 37.402621, 37.402422, 37.402222, 37.402023, 37.401824, 37.401625, 37.401425, 37.401226, 37.401027, 37.400837, 37.400646, 37.400456, 37.400224, 37.399993, 37.399761, 37.399530, 37.399298, 37.399067, 37.398864, 37.398662, 37.398459, 37.398257, 37.398015, 37.397774, 37.397532, 37.397338, 37.397143, 37.396949, 37.396754, 37.396559, 37.396365, 37.396164, 37.395962, 37.395761, 37.395560, 37.395359, 37.395152, 37.394946, 37.394739, 37.394532, 37.394290, 37.394048, 37.393806, 37.393564, 37.393322, 37.393080, 37.392839, 37.392597, 37.392355, 37.392113, 37.391871, 37.391629, 37.391387, 37.391141, 37.390895, 37.390650, 37.390404, 37.390158, 37.389913, 37.389667, 37.389421, 37.389176, 37.388930, 37.388684, 37.388439, 37.388193, 37.387947, 37.387701, 37.387456, 37.387210, 37.386964, 37.386719, 37.386473, 37.386227, 37.385982, 37.385736, 37.385490, 37.385245, 37.384999, 37.384753, 37.384507, 37.384262, 37.384262, 37.384262, 37.384262, 37.384262, 37.384017, 37.384017, 37.384017, 37.384017, 37.384017, 37.384017, 37.384017, 37.384017, 37.383772, 37.383772, 37.383527, 37.383282, 37.383037, 37.382792, 37.382547, 37.382302, 37.382057, 37.381811, 37.381566, 37.381317, 37.381068, 37.380820, 37.380571, 37.380322, 37.380073, 37.379824, 37.379575, 37.379326, 37.379077, 37.378828, 37.378579, 37.378330, 37.378081, 37.377832, 37.377583, 37.377334, 37.377085, 37.376836, 37.376587, 37.376338, 37.376089, 37.375840, 37.375591, 37.375342, 37.375094, 37.374845, 37.374596, 37.374347, 37.374098, 37.373849, 37.373600, 37.373351, 37.373102, 37.372853, 37.372604, 37.372355, 37.372106, 37.371857, 37.371608, 37.371359, 37.371110, 37.370861, 37.370612, 37.370363, 37.370114, 37.369865, 37.369617, 37.369368, 37.369119, 37.368870, 37.368621, 37.368372, 37.368123, 37.367874, 37.367625, 37.367376, 37.367127, 37.366878, 37.366629, 37.366380, 37.366131, 37.365882, 37.365633, 37.365384, 37.365135, 37.364886, 37.364637, 37.364388, 37.364139, 37.363891, 37.363642, 37.363393, 37.363144, 37.362895, 37.362646, 37.362397, 37.362148, 37.361899, 37.361650, 37.361401, 37.361152, 37.360903, 37.360654, 37.360405, 37.360156, 37.359907, 37.359658, 37.359409, 37.359160, 37.358911, 37.358662, 37.358412, 37.358163, 37.357913, 37.357663, 37.357414, 37.357164, 37.356915, 37.356665, 37.356416, 37.356166, 37.355916, 37.355667, 37.355417, 37.355168, 37.354918, 37.354668, 37.354419, 37.354169, 37.353920, 37.353670, 37.353420, 37.353171, 37.352921, 37.352672, 37.352422, 37.352172, 37.351923, 37.351673, 37.351424, 37.351174, 37.350925, 37.350675, 37.350425, 37.350176, 37.349926, 37.349677, 37.349427, 37.349177, 37.348928, 37.348678, 37.348429, 37.348179, 37.347929, 37.347680, 37.347430, 37.347181, 37.346931, 37.346682, 37.346432, 37.346182, 37.345933, 37.345683, 37.345434, 37.345184, 37.344934, 37.344685, 37.344435, 37.344186, 37.343936, 37.343686, 37.343437, 37.343187, 37.342938, 37.342688, 37.342438, 37.342189, 37.341939, 37.341690, 37.341440, 37.341191, 37.340941, 37.340691, 37.340442, 37.340192, 37.339943, 37.339693, 37.339443, 37.339194, 37.338944, 37.338695, 37.338445, 37.338195, 37.337946, 37.337696, 37.337447, 37.337197, 37.336948, 37.336698, 37.336448, 37.336199, 37.335949, 37.335700, 37.335450, 37.335200, 37.334951, 37.334701, 37.334452, 37.334202, 37.333952, 37.333703, 37.333453, 37.333204, 37.332954, 37.332704, 37.332455, 37.332205, 37.331956, 37.331706, 37.331457, 37.331207, 37.330957, 37.330708, 37.330458, 37.330209, 37.329959, 37.329709, 37.329460, 37.329210, 37.328961, 37.328711, 37.328461, 37.328212, 37.327962, 37.327713, 37.327463, 37.327214, 37.326964, 37.326714, 37.326465, 37.326215, 37.325966, 37.325716, 37.325466, 37.325218, 37.324969, 37.324721, 37.324472, 37.324223, 37.323975, 37.323726, 37.323477, 37.323229, 37.322980, 37.322731, 37.322483, 37.322234, 37.321986, 37.321737, 37.321488, 37.321240, 37.320991, 37.320742, 37.320494, 37.320245, 37.319997, 37.319748, 37.319499, 37.319251, 37.319002, 37.318753, 37.318505, 37.318256, 37.318007, 37.317759, 37.317510, 37.317262, 37.317013, 37.316764, 37.316516, 37.316267, 37.316018, 37.315770, 37.315521, 37.315273, 37.315024, 37.314775, 37.314527, 37.314278, 37.314029, 37.313781, 37.313532, 37.313283, 37.313035, 37.312786, 37.312538, 37.312289, 37.312040, 37.311792, 37.311543, 37.311294, 37.311046, 37.310797, 37.310549, 37.310300, 37.310051, 37.309803, 37.309554, 37.309305, 37.309057, 37.308808, 37.308559, 37.308311, 37.308062, 37.307814, 37.307565, 37.307316, 37.307068, 37.306819, 37.306570, 37.306322, 37.306073, 37.305825, 37.305576, 37.305327, 37.305079, 37.304830, 37.304581, 37.304333, 37.304084, 37.303835, 37.303587, 37.303338, 37.303090, 37.302841, 37.302592, 37.302344, 37.302095, 37.301846, 37.301598, 37.301349, 37.301101, 37.300852, 37.300603, 37.300355, 37.300106, 37.299857, 37.299609, 37.299360, 37.299111, 37.298863, 37.298614, 37.298366, 37.298117, 37.297868, 37.297620, 37.297371, 37.297122, 37.296874, 37.296625, 37.296377, 37.296129, 37.295881, 37.295633, 37.295386, 37.295138, 37.294890, 37.294642, 37.294395, 37.294147, 37.293899, 37.293651, 37.293404, 37.293156, 37.292908, 37.292660, 37.292413, 37.292165, 37.291917, 37.291669, 37.291422, 37.291174, 37.290926, 37.290678, 37.290431, 37.290183, 37.289935, 37.289688, 37.289440, 37.289192, 37.288944, 37.288697, 37.288449, 37.288201, 37.287953, 37.287706, 37.287458, 37.287210, 37.286962, 37.286715, 37.286467, 37.286219, 37.285971, 37.285724, 37.285476, 37.285228, 37.284980, 37.284733, 37.284485, 37.284237, 37.283989, 37.283742, 37.283494, 37.283246, 37.282999, 37.282751, 37.282503, 37.282255, 37.282008, 37.281760, 37.281512, 37.281264, 37.281017, 37.280769, 37.280521, 37.280273, 37.280026, 37.279778, 37.279530, 37.279282, 37.279035, 37.278787, 37.278539, 37.278291, 37.278044, 37.277796, 37.277548, 37.277300, 37.277053, 37.276805, 37.276557, 37.276310, 37.276062, 37.275814, 37.275566, 37.275319, 37.275071, 37.274823, 37.274575, 37.274328, 37.274079, 37.273830, 37.273581, 37.273332, 37.273083, 37.272834, 37.272585, 37.272337, 37.272088, 37.271839, 37.271590, 37.271341, 37.271092, 37.270843, 37.270594, 37.270345, 37.270097, 37.269848, 37.269599, 37.269350, 37.269101, 37.268852, 37.268603, 37.268354, 37.268106, 37.267857, 37.267608, 37.267359, 37.267110, 37.266861, 37.266612, 37.266363, 37.266114, 37.265866, 37.265617, 37.265368, 37.265119, 37.264870, 37.264621, 37.264372, 37.264123, 37.263874, 37.263626, 37.263377, 37.263128, 37.262879, 37.262630, 37.262381, 37.262132, 37.261883, 37.261635, 37.261386, 37.261137, 37.260888, 37.260639, 37.260390, 37.260141, 37.259892, 37.259643, 37.259395, 37.259146, 37.258897, 37.258648, 37.258399, 37.258150, 37.257901, 37.257652, 37.257403, 37.257155, 37.256906, 37.256657, 37.256408, 37.256159, 37.255910, 37.255661, 37.255412, 37.255164, 37.254915, 37.254666, 37.254417, 37.254168, 37.253923, 37.253677, 37.253432, 37.253187, 37.252941, 37.252696, 37.252451, 37.252205, 37.251960, 37.251715, 37.251469, 37.251224, 37.250979, 37.250733, 37.250488, 37.250243, 37.249997, 37.249752, 37.249507, 37.249261, 37.249016, 37.248771, 37.248525, 37.248280, 37.248035, 37.247789, 37.247544, 37.247299, 37.247053, 37.246808, 37.246563, 37.246317, 37.246072, 37.245833, 37.245594, 37.245355, 37.245115, 37.244886, 37.244656, 37.244426, 37.244197, 37.243967, 37.243737, 37.243508, 37.243278, 37.243049, 37.242809, 37.242569, 37.242329, 37.242089, 37.241849, 37.241609, 37.241369, 37.241129, 37.240889, 37.240649, 37.240409, 37.240170, 37.239930, 37.239690, 37.239450, 37.239210, 37.238970, 37.238730, 37.238490, 37.238250, 37.238010, 37.237770, 37.237531, 37.237291, 37.237051, 37.236811, 37.236571, 37.236331, 37.236091, 37.235851, 37.235611, 37.235371, 37.235131, 37.234892, 37.234659, 37.234427, 37.234194, 37.233962, 37.233730, 37.233497, 37.233265, 37.233033, 37.232800, 37.232568, 37.232332, 37.232095, 37.231859, 37.231623, 37.231386, 37.231150, 37.230922, 37.230694, 37.230467, 37.230239, 37.230011, 37.229783, 37.229572, 37.229362, 37.229151, 37.228940, 37.228730, 37.228519, 37.228308, 37.228097, 37.227887, 37.227676, 37.227465, 37.227255, 37.227044, 37.226833, 37.226622, 37.226424, 37.226225, 37.226026, 37.225827, 37.225628, 37.225429, 37.225230, 37.225031, 37.224832, 37.224633, 37.224434, 37.224235, 37.224036, 37.223838, 37.223631, 37.223425, 37.223218, 37.223012, 37.222805, 37.222599, 37.222392, 37.222186, 37.221979, 37.221773, 37.221566, 37.221360];
var longitudeValue = [127.089614, 127.089861, 127.090108, 127.090355, 127.090601, 127.090848, 127.091133, 127.091417, 127.091701, 127.091985, 127.092243, 127.092500, 127.092758, 127.093015, 127.093262, 127.093509, 127.093756, 127.094002, 127.094249, 127.094496, 127.094788, 127.095081, 127.095373, 127.095665, 127.095939, 127.096213, 127.096486, 127.096760, 127.096967, 127.097175, 127.097382, 127.097570, 127.097758, 127.097945, 127.098133, 127.098321, 127.098508, 127.098696, 127.098884, 127.098988, 127.099091, 127.099195, 127.099236, 127.099277, 127.099319, 127.099360, 127.099401, 127.099442, 127.099426, 127.099410, 127.099394, 127.099378, 127.099431, 127.099485, 127.099538, 127.099665, 127.099792, 127.099919, 127.100046, 127.100173, 127.100300, 127.100393, 127.100485, 127.100577, 127.100669, 127.100762, 127.100837, 127.100912, 127.100987, 127.101062, 127.101105, 127.101148, 127.101191, 127.101234, 127.101277, 127.101319, 127.101362, 127.101405, 127.101448, 127.101491, 127.101534, 127.101577, 127.101620, 127.101666, 127.101712, 127.101758, 127.101804, 127.101850, 127.101896, 127.101942, 127.101988, 127.102034, 127.102080, 127.102126, 127.102172, 127.102218, 127.102264, 127.102310, 127.102356, 127.102402, 127.102448, 127.102494, 127.102540, 127.102586, 127.102632, 127.102677, 127.102723, 127.102769, 127.102815, 127.102861, 127.102907, 127.102922, 127.102922, 127.102922, 127.102922, 127.102922, 127.102936, 127.102936, 127.102936, 127.102936, 127.102936, 127.102936, 127.102936, 127.102936, 127.102950, 127.102950, 127.102965, 127.102979, 127.102993, 127.103008, 127.103022, 127.103036, 127.103050, 127.103065, 127.103079, 127.103080, 127.103081, 127.103082, 127.103083, 127.103084, 127.103085, 127.103086, 127.103087, 127.103087, 127.103088, 127.103089, 127.103090, 127.103091, 127.103092, 127.103093, 127.103094, 127.103095, 127.103096, 127.103097, 127.103098, 127.103099, 127.103100, 127.103101, 127.103102, 127.103103, 127.103104, 127.103104, 127.103105, 127.103106, 127.103107, 127.103108, 127.103109, 127.103110, 127.103111, 127.103112, 127.103113, 127.103114, 127.103115, 127.103116, 127.103117, 127.103118, 127.103119, 127.103120, 127.103121, 127.103121, 127.103122, 127.103123, 127.103124, 127.103125, 127.103126, 127.103127, 127.103128, 127.103129, 127.103130, 127.103131, 127.103132, 127.103133, 127.103134, 127.103135, 127.103136, 127.103137, 127.103138, 127.103138, 127.103139, 127.103140, 127.103141, 127.103142, 127.103143, 127.103144, 127.103145, 127.103146, 127.103147, 127.103148, 127.103149, 127.103150, 127.103151, 127.103152, 127.103153, 127.103154, 127.103155, 127.103155, 127.103156, 127.103157, 127.103158, 127.103159, 127.103160, 127.103161, 127.103162, 127.103163, 127.103164, 127.103165, 127.103167, 127.103168, 127.103170, 127.103172, 127.103173, 127.103175, 127.103177, 127.103178, 127.103180, 127.103182, 127.103183, 127.103185, 127.103187, 127.103188, 127.103190, 127.103192, 127.103193, 127.103195, 127.103197, 127.103199, 127.103200, 127.103202, 127.103204, 127.103205, 127.103207, 127.103209, 127.103210, 127.103212, 127.103214, 127.103215, 127.103217, 127.103219, 127.103220, 127.103222, 127.103224, 127.103225, 127.103227, 127.103229, 127.103230, 127.103232, 127.103234, 127.103236, 127.103237, 127.103239, 127.103241, 127.103242, 127.103244, 127.103246, 127.103247, 127.103249, 127.103251, 127.103252, 127.103254, 127.103256, 127.103257, 127.103259, 127.103261, 127.103262, 127.103264, 127.103266, 127.103267, 127.103269, 127.103271, 127.103273, 127.103274, 127.103276, 127.103278, 127.103279, 127.103281, 127.103283, 127.103284, 127.103286, 127.103288, 127.103289, 127.103291, 127.103293, 127.103294, 127.103296, 127.103298, 127.103299, 127.103301, 127.103303, 127.103304, 127.103306, 127.103308, 127.103309, 127.103311, 127.103313, 127.103315, 127.103316, 127.103318, 127.103320, 127.103321, 127.103323, 127.103325, 127.103326, 127.103328, 127.103330, 127.103331, 127.103333, 127.103335, 127.103336, 127.103338, 127.103340, 127.103341, 127.103343, 127.103345, 127.103346, 127.103348, 127.103350, 127.103352, 127.103353, 127.103355, 127.103357, 127.103358, 127.103360, 127.103362, 127.103363, 127.103365, 127.103367, 127.103368, 127.103370, 127.103372, 127.103373, 127.103375, 127.103377, 127.103378, 127.103380, 127.103382, 127.103383, 127.103385, 127.103387, 127.103389, 127.103390, 127.103391, 127.103392, 127.103393, 127.103393, 127.103394, 127.103395, 127.103396, 127.103397, 127.103398, 127.103398, 127.103399, 127.103400, 127.103401, 127.103402, 127.103403, 127.103403, 127.103404, 127.103405, 127.103406, 127.103407, 127.103408, 127.103408, 127.103409, 127.103410, 127.103411, 127.103412, 127.103412, 127.103413, 127.103414, 127.103415, 127.103416, 127.103417, 127.103417, 127.103418, 127.103419, 127.103420, 127.103421, 127.103422, 127.103422, 127.103423, 127.103424, 127.103425, 127.103426, 127.103426, 127.103427, 127.103428, 127.103429, 127.103430, 127.103431, 127.103431, 127.103432, 127.103433, 127.103434, 127.103435, 127.103436, 127.103436, 127.103437, 127.103438, 127.103439, 127.103440, 127.103441, 127.103441, 127.103442, 127.103443, 127.103444, 127.103445, 127.103445, 127.103446, 127.103447, 127.103448, 127.103449, 127.103450, 127.103450, 127.103451, 127.103452, 127.103453, 127.103454, 127.103455, 127.103455, 127.103456, 127.103457, 127.103458, 127.103459, 127.103459, 127.103460, 127.103461, 127.103462, 127.103463, 127.103464, 127.103464, 127.103465, 127.103466, 127.103467, 127.103468, 127.103469, 127.103469, 127.103470, 127.103471, 127.103472, 127.103473, 127.103474, 127.103474, 127.103475, 127.103476, 127.103477, 127.103478, 127.103478, 127.103479, 127.103480, 127.103481, 127.103482, 127.103483, 127.103483, 127.103484, 127.103485, 127.103486, 127.103487, 127.103488, 127.103490, 127.103492, 127.103493, 127.103495, 127.103497, 127.103499, 127.103500, 127.103502, 127.103504, 127.103505, 127.103507, 127.103509, 127.103510, 127.103512, 127.103514, 127.103515, 127.103517, 127.103519, 127.103520, 127.103522, 127.103524, 127.103526, 127.103527, 127.103529, 127.103531, 127.103532, 127.103534, 127.103536, 127.103537, 127.103539, 127.103541, 127.103542, 127.103544, 127.103546, 127.103547, 127.103549, 127.103551, 127.103553, 127.103554, 127.103556, 127.103558, 127.103559, 127.103561, 127.103563, 127.103564, 127.103566, 127.103568, 127.103569, 127.103571, 127.103573, 127.103574, 127.103576, 127.103578, 127.103580, 127.103581, 127.103583, 127.103585, 127.103586, 127.103588, 127.103590, 127.103591, 127.103593, 127.103595, 127.103596, 127.103598, 127.103600, 127.103601, 127.103603, 127.103605, 127.103607, 127.103608, 127.103610, 127.103612, 127.103613, 127.103615, 127.103617, 127.103618, 127.103620, 127.103622, 127.103623, 127.103625, 127.103627, 127.103628, 127.103630, 127.103632, 127.103634, 127.103635, 127.103637, 127.103638, 127.103640, 127.103641, 127.103643, 127.103644, 127.103646, 127.103647, 127.103649, 127.103650, 127.103651, 127.103653, 127.103654, 127.103656, 127.103657, 127.103659, 127.103660, 127.103662, 127.103663, 127.103665, 127.103666, 127.103667, 127.103669, 127.103670, 127.103672, 127.103673, 127.103675, 127.103676, 127.103678, 127.103679, 127.103681, 127.103682, 127.103684, 127.103685, 127.103686, 127.103688, 127.103689, 127.103691, 127.103692, 127.103694, 127.103695, 127.103697, 127.103698, 127.103700, 127.103701, 127.103702, 127.103704, 127.103705, 127.103707, 127.103708, 127.103710, 127.103711, 127.103713, 127.103714, 127.103716, 127.103717, 127.103718, 127.103720, 127.103721, 127.103723, 127.103724, 127.103726, 127.103727, 127.103729, 127.103730, 127.103732, 127.103733, 127.103735, 127.103736, 127.103737, 127.103739, 127.103740, 127.103742, 127.103743, 127.103745, 127.103746, 127.103748, 127.103749, 127.103751, 127.103752, 127.103753, 127.103755, 127.103756, 127.103758, 127.103759, 127.103760, 127.103761, 127.103763, 127.103764, 127.103765, 127.103767, 127.103768, 127.103769, 127.103771, 127.103772, 127.103773, 127.103774, 127.103776, 127.103777, 127.103778, 127.103780, 127.103781, 127.103782, 127.103784, 127.103785, 127.103786, 127.103787, 127.103789, 127.103790, 127.103791, 127.103793, 127.103794, 127.103795, 127.103797, 127.103798, 127.103819, 127.103841, 127.103862, 127.103884, 127.103929, 127.103974, 127.104020, 127.104065, 127.104110, 127.104155, 127.104201, 127.104246, 127.104291, 127.104353, 127.104414, 127.104476, 127.104538, 127.104599, 127.104661, 127.104722, 127.104784, 127.104845, 127.104907, 127.104968, 127.105030, 127.105091, 127.105153, 127.105214, 127.105276, 127.105337, 127.105399, 127.105461, 127.105522, 127.105584, 127.105645, 127.105707, 127.105768, 127.105830, 127.105891, 127.105953, 127.106014, 127.106076, 127.106137, 127.106199, 127.106260, 127.106322, 127.106384, 127.106445, 127.106506, 127.106567, 127.106628, 127.106689, 127.106750, 127.106812, 127.106873, 127.106934, 127.106995, 127.106988, 127.106981, 127.106974, 127.106966, 127.106959, 127.106952, 127.106864, 127.106777, 127.106689, 127.106602, 127.106514, 127.106426, 127.106276, 127.106126, 127.105976, 127.105826, 127.105675, 127.105525, 127.105375, 127.105225, 127.105075, 127.104924, 127.104774, 127.104624, 127.104474, 127.104324, 127.104173, 127.104019, 127.103865, 127.103711, 127.103557, 127.103403, 127.103249, 127.103095, 127.102941, 127.102787, 127.102633, 127.102479, 127.102325, 127.102171, 127.102017, 127.101870, 127.101724, 127.101577, 127.101430, 127.101284, 127.101137, 127.100990, 127.100844, 127.100697, 127.100551, 127.100404, 127.100257];
// northbound - test_02.sh
// var latitudeValue = [37.22352405573051, 37.223537, 37.224295, 37.227, 37.229295, 37.229281668882365, 37.229281668882365, 37.229295, 37.229351, 37.2297, 37.229954, 37.230197, 37.230491, 37.23049656599767, 37.23049656599767, 37.230491, 37.230592, 37.231336, 37.231343592110576, 37.231343592110576, 37.231336, 37.231348, 37.231751, 37.232082, 37.232532, 37.233824, 37.236945, 37.236947926308346, 37.236947926308346, 37.236945, 37.237912, 37.238405, 37.238688, 37.241501, 37.243184, 37.243633, 37.244483, 37.245384, 37.246899, 37.248748, 37.249817, 37.250826, 37.252264, 37.252952, 37.253352, 37.25638, 37.262024, 37.26369, 37.265657, 37.266695, 37.266768, 37.267357, 37.26822, 37.26874, 37.269261, 37.269903, 37.270792, 37.271351, 37.2779, 37.28315, 37.290189, 37.291419, 37.29184, 37.295286, 37.2959, 37.302186, 37.322687, 37.323432, 37.324166, 37.324557, 37.32791, 37.329414, 37.331266, 37.33494, 37.33934, 37.342914, 37.343611, 37.349893, 37.35029, 37.355472, 37.361734, 37.365257, 37.367386, 37.369617, 37.372628, 37.377812, 37.381216, 37.381556, 37.383093, 37.383768, 37.384385, 37.385395, 37.386782, 37.387661, 37.391162, 37.392183, 37.393447, 37.394273, 37.394821, 37.396643, 37.397731, 37.398689, 37.39931, 37.3998, 37.400291, 37.400821, 37.401185, 37.401544, 37.402113, 37.40243, 37.402403742119155];
// var longitudeValue = [127.1021819114685, 127.102154, 127.102695, 127.10466, 127.106355, 127.10638292133807, 127.10638292133807, 127.106355, 127.106397, 127.10662, 127.106748, 127.106855, 127.107012, 127.10699480026959, 127.10699480026959, 127.107012, 127.107066, 127.107226, 127.10716880857944, 127.10716880857944, 127.107226, 127.107228, 127.107256, 127.107269, 127.107233, 127.106882, 127.106058, 127.1060771495104, 127.1060771495104, 127.106058, 127.105803, 127.105677, 127.105604, 127.10487, 127.104457, 127.104338, 127.104154, 127.104044, 127.104034, 127.104013, 127.103987, 127.103996, 127.103981, 127.103972, 127.103978, 127.104001, 127.103977, 127.10397, 127.103928, 127.103935, 127.103939, 127.103943, 127.10395, 127.10395, 127.103925, 127.103922, 127.103917, 127.103916, 127.10388, 127.10385, 127.103819, 127.103805, 127.1038, 127.103831, 127.103821, 127.103722, 127.103648, 127.103644, 127.103636, 127.103636, 127.10363, 127.103594, 127.103596, 127.103581, 127.10354, 127.103536, 127.103531, 127.103458, 127.103448, 127.103391, 127.103437, 127.103854, 127.103546, 127.103367, 127.103323, 127.103351, 127.103315, 127.103317, 127.103312, 127.103245, 127.103154, 127.103016, 127.102789, 127.102656, 127.101986, 127.101794, 127.101556, 127.101389, 127.101293, 127.10097, 127.100748, 127.100566, 127.100409, 127.10028, 127.100056, 127.09975, 127.099489, 127.099176, 127.098649, 127.0983, 127.09826186299323];
// westbound  - test_03.sh
// var latitudeValue = [37.40562265475612, 37.405602, 37.405534, 37.40539, 37.405215, 37.404247, 37.403939, 37.403668, 37.403335, 37.40293, 37.402456, 37.401895, 37.401445, 37.400898, 37.39997, 37.397256, 37.396776, 37.396358, 37.396063, 37.395803, 37.395567, 37.395359, 37.395232, 37.395074, 37.394937, 37.394876, 37.394856, 37.394886, 37.394993, 37.395058, 37.395307, 37.39544, 37.395645, 37.396097, 37.396259, 37.396369, 37.396412, 37.396429, 37.396386, 37.39631, 37.39619, 37.39602, 37.395824, 37.395679, 37.395491, 37.395346, 37.395142, 37.395023, 37.394852, 37.39429, 37.394153, 37.394, 37.393744, 37.393531, 37.393292, 37.393088, 37.392968, 37.392909, 37.392866, 37.39284, 37.392755, 37.392713, 37.392627, 37.392517, 37.392355, 37.392142, 37.39192, 37.391656, 37.391315, 37.390728, 37.389913, 37.388989, 37.38858, 37.388222, 37.387907, 37.387642, 37.387037, 37.386364, 37.386216, 37.385997, 37.385554, 37.385051, 37.384429, 37.383619, 37.380055, 37.37985, 37.379637, 37.379509, 37.37945, 37.379467, 37.379527, 37.379646, 37.379875, 37.380113, 37.382095, 37.38219, 37.382176, 37.382047, 37.381917, 37.381698, 37.378076, 37.377891, 37.377802, 37.377747, 37.377697, 37.377738, 37.377767, 37.377813, 37.377984, 37.378348, 37.378775, 37.379135, 37.379383, 37.379528, 37.379647, 37.379685, 37.379663, 37.379446, 37.379326, 37.379173, 37.378951, 37.378721, 37.37832, 37.377852, 37.377417, 37.377101, 37.376794, 37.37653, 37.376482, 37.376363, 37.376155, 37.376061, 37.375925, 37.375584, 37.375439, 37.375336, 37.375055, 37.374663, 37.374228, 37.373921, 37.373563, 37.37265, 37.371865, 37.370032, 37.369887, 37.369751, 37.369611, 37.369482, 37.369262, 37.368939, 37.368761, 37.368531, 37.368499, 37.368492, 37.368484, 37.368466, 37.368466, 37.368477, 37.368492, 37.368568, 37.368662, 37.368684, 37.36873377175179];
// var longitudeValue = [127.09396094083786, 127.093971, 127.093759, 127.093273, 127.092754, 127.089763, 127.089043, 127.088459, 127.087751, 127.086937, 127.08603, 127.085074, 127.084358, 127.083579, 127.082354, 127.078636, 127.077959, 127.077208, 127.076561, 127.075928, 127.075253, 127.074581, 127.074092, 127.073466, 127.072701, 127.072047, 127.071267, 127.070426, 127.069449, 127.068799, 127.063451, 127.061117, 127.059475, 127.056675, 127.055527, 127.054475, 127.05366, 127.05278, 127.051579, 127.050592, 127.049776, 127.04895, 127.047931, 127.047008, 127.045549, 127.044433, 127.04276, 127.041794, 127.040592, 127.035829, 127.03481, 127.033865, 127.032438, 127.031355, 127.030303, 127.029306, 127.028447, 127.027525, 127.026323, 127.025132, 127.018019, 127.017161, 127.016388, 127.015637, 127.014811, 127.013996, 127.01332, 127.012644, 127.011882, 127.010651, 127.008951, 127.007025, 127.006145, 127.005222, 127.004182, 127.003119, 127.000555, 126.997701, 126.997109, 126.996231, 126.994644, 126.993088, 126.991414, 126.989279, 126.979849, 126.979183, 126.978239, 126.977349, 126.97649, 126.975707, 126.974913, 126.974119, 126.973101, 126.972352, 126.96659, 126.965954, 126.965293, 126.964631, 126.964049, 126.963407, 126.954583, 126.954011, 126.953524, 126.952965, 126.952241, 126.951737, 126.951557, 126.951362, 126.950478, 126.949508, 126.948319, 126.947359, 126.94656, 126.945986, 126.945309, 126.944517, 126.943882, 126.943225, 126.94257, 126.941991, 126.941411, 126.940929, 126.940242, 126.939341, 126.938429, 126.937592, 126.936584, 126.935532, 126.935165, 126.934419, 126.933007, 126.932067, 126.930779, 126.928247, 126.92741, 126.926853, 126.925404, 126.923001, 126.91961, 126.915973, 126.91239, 126.905793, 126.900418, 126.886331, 126.885129, 126.883895, 126.8828, 126.881653, 126.879909, 126.877511, 126.876246, 126.874454, 126.874101, 126.873703, 126.873468, 126.872941, 126.872169, 126.871836, 126.871375, 126.870495, 126.869691, 126.86955, 126.86956197023392];
// eastbound  - test_04.sh
// var latitudeValue = [37.36853712449913, 37.368535, 37.368458, 37.368372, 37.36833, 37.368338, 37.36835, 37.3684, 37.368524, 37.368762, 37.368941, 37.369128, 37.369239, 37.369367, 37.369512, 37.369691, 37.371439, 37.3723, 37.373196, 37.373546, 37.373878, 37.374313, 37.37462, 37.374927, 37.375072, 37.375217, 37.375379, 37.375592, 37.375737, 37.375776, 37.375891, 37.376095, 37.376172, 37.376223, 37.376479, 37.37682, 37.377238, 37.377707, 37.378465, 37.378738, 37.379028, 37.379207, 37.379309, 37.379475, 37.379487, 37.379439, 37.37934, 37.379201, 37.378948, 37.378606, 37.378166, 37.377794, 37.377679, 37.377551, 37.377508, 37.3775, 37.377514, 37.377593, 37.377712, 37.377907, 37.381543, 37.381737, 37.381867, 37.381985, 37.382008, 37.381948, 37.379971, 37.379741, 37.379598, 37.379483, 37.379381, 37.379327, 37.379321, 37.379369, 37.379501, 37.379714, 37.37991, 37.383448, 37.384309, 37.385008, 37.385162, 37.385477, 37.385852, 37.386619, 37.386884, 37.387472, 37.387813, 37.388086, 37.388392, 37.388586, 37.388708, 37.389347, 37.390097, 37.390805, 37.391332, 37.391673, 37.391962, 37.392184, 37.392372, 37.392508, 37.392576, 37.392653, 37.392713, 37.392781, 37.392892, 37.393045, 37.393275, 37.393497, 37.393821, 37.394213, 37.394545, 37.394707, 37.394912, 37.395091, 37.395406, 37.395687, 37.395918, 37.39608, 37.396182, 37.396242, 37.396276, 37.396267, 37.396224, 37.396122, 37.395943, 37.395508, 37.395338, 37.395227, 37.395125, 37.394888, 37.394837, 37.394739, 37.394708, 37.394723, 37.394791, 37.394911, 37.395081, 37.395229, 37.395425, 37.395649, 37.395908, 37.396226, 37.396639, 37.397097, 37.399854, 37.400784, 37.401339, 37.401762, 37.40231, 37.402811, 37.403188, 37.40355, 37.403812, 37.40411, 37.405059, 37.405237, 37.405409, 37.405445, 37.405394677408474];
// var longitudeValue = [126.86957806348799, 126.869578, 126.87012, 126.871096, 126.871858, 126.872802, 126.87415, 126.874728, 126.875743, 126.877641, 126.878939, 126.880752, 126.882018, 126.883445, 126.88485, 126.886406, 126.900064, 126.905868, 126.912497, 126.916016, 126.919847, 126.923087, 126.925104, 126.926724, 126.927464, 126.928226, 126.929417, 126.93108, 126.932389, 126.932674, 126.933515, 126.934953, 126.935414, 126.93565, 126.936541, 126.937485, 126.938504, 126.939427, 126.940843, 126.941358, 126.942087, 126.94272, 126.943289, 126.943909, 126.944467, 126.94528, 126.945935, 126.946505, 126.947315, 126.948251, 126.949396, 126.950398, 126.950884, 126.951427, 126.951909, 126.952225, 126.952996, 126.953556, 126.954094, 126.954647, 126.963494, 126.96406, 126.964683, 126.965319, 126.965926, 126.966525, 126.972302, 126.973038, 126.973623, 126.974207, 126.974858, 126.975682, 126.976465, 126.977138, 126.978357, 126.979323, 126.979945, 126.989365, 126.991564, 126.993485, 126.993942, 126.99488, 126.996285, 126.999493, 127.000598, 127.003098, 127.004471, 127.00533, 127.006134, 127.006569, 127.006842, 127.008205, 127.009718, 127.011177, 127.012311, 127.013137, 127.013974, 127.014822, 127.015669, 127.016603, 127.017633, 127.025132, 127.026763, 127.027943, 127.028919, 127.02981, 127.030872, 127.032202, 127.034702, 127.03791, 127.040592, 127.041858, 127.043693, 127.044712, 127.046407, 127.048006, 127.049154, 127.050077, 127.050967, 127.051729, 127.052694, 127.053553, 127.054411, 127.055463, 127.056643, 127.059454, 127.060591, 127.061675, 127.063413, 127.068785, 127.069406, 127.070338, 127.071248, 127.072045, 127.072712, 127.073459, 127.074151, 127.074648, 127.075306, 127.075972, 127.076639, 127.077316, 127.078082, 127.078747, 127.082476, 127.083726, 127.084494, 127.085181, 127.086095, 127.08706, 127.087839, 127.088595, 127.089185, 127.089851, 127.092778, 127.093294, 127.093859, 127.093972, 127.09399715065956];

var ovsLocationData;
var ovsEventData;

////////////////////////////////////////////////
// Flow #1 : Request Connection
////////////////////////////////////////////////

const connectionOptions = {
    host: config.host,
    port: config.port, 
    username: config.username,
    password: config.password,
    clean: true,
    protocol: 'mqtt',
    reconnectedPeriod: config.reconnectedPeriod,
    connectTimeout: config.connectTimeout
};
const client = mqtt.connect(connectionOptions);

client.on("connect",function(connack){
    if (connack.cmd=='connack'){
        console.log("MQTT Connection success! "+config.host+":"+config.port);
        // serialNo 이용 subscribe
        subscribe(utils.deviceTopic+serialNo);
        // 주기적 위치 전송
        publish(utils.locationTopic);
        // periodic event publish
        // publish(utils.eventTopic);
    }else{
        console.log("MQTT connection fail");
    }    
});

////////////////////////////////////////////////
// Flow #2. Subscribe a topic for V2N services 
////////////////////////////////////////////////

function subscribe(topic){
    client.subscribe(topic,{qos: config.qos},function(err, granted){
        if (!err){
            console.log(topic+' subscription success!');
            console.log(topic+' subscription is granted: '+ JSON.stringify(granted));
        }else{
            console.log(topic+' subscription fail!');
        }
    });
}

function publish(topic){
    var idx =0;
    switch (topic){
        ////////////////////////////////////////////////
        // Flow #3. Publish current location
        ////////////////////////////////////////////////
        case utils.locationTopic:
            // https://tde.sktelecom.com/wiki/pages/viewpage.action?pageId=253419625
            if (client.connected == true){
                var timer=setInterval(function(){
                    client.publish(utils.locationTopic, JSON.stringify(
                        ovsLocationData= {
                        "devType": config.deviceType,
                        "timestamp": new Date().getTime(),
                        "serialNo": serialNo,
                        "speed": config.speed,
                        "location":{
                            "latitude": latitudeValue[idx % latitudeValue.length],
                            "longitude": longitudeValue[ idx % longitudeValue.length]
                            }
                        }),{qos: config.qos});
                    console.log('idx:'+idx+'/'+latitudeValue.length, ', topic: '+utils.locationTopic, JSON.stringify(ovsLocationData));
                    idx+=1;
                    // if (idx == config.numOfTxMsg){
                    if (idx == latitudeValue.length){
                        clearInterval(timer);
                        client.end(); 
                    } 
                },config.TxInterval);
            };
            break;

        ////////////////////////////////////////////////
        // Flow #4. Publish V2N event
        ////////////////////////////////////////////////
        case utils.eventTopic:
            // https://tde.sktelecom.com/wiki/pages/viewpage.action?pageId=253419625
            if (client.connected == true){
//                var timer=setInterval(function(){

                    client.publish(utils.eventTopic, JSON.stringify(
                        ovsEventData = {
                            "devType": utils.dev_type,
                            "timestamp": new Date().getTime(),
                            "serialNo": serialNo,
                            "eventType": utils.eventType,
                            "location":{
                                "latitude": latitudeValue[idx % latitudeValue.length],
                                "longitude": longitudeValue[idx % longitudeValue.length]
                            }
                        }
                        ),{qos: config.qos});
                    console.log('Topic is '+utils.eventTopic);
                    console.log(JSON.stringify(ovsEventData));                   
//                },config.TxInterval)
            }
            break;
    }
}

////////////////////////////////////////////////
// Flow #5. Receive a V2N service message
////////////////////////////////////////////////

client.on('message',function(topic, message){
        var obj = JSON.parse(message);
        console.log(obj);
        // North bound 통한 noti.
        if (obj.type == 9999){
            console.log(colors.yellow(obj.message));   
        }
        // event message
        else{
            var et_str = utils.typeParsing(obj.msgType);
            var tn_str = utils.tunnelParsing(obj.tunnel);
            var dte_str = utils.distanceToEventParsing(obj.distanceToEvent);
            console.log(colors.yellow(tn_str + " "+ dte_str + " " + et_str + "입니다! 조심하세요!"));
            console.log("Rx topic is "+ topic);
            console.log("Rx message is "+ message); 
        }      
});

// authentification 에러
client.on("error",function(error){
    console.log("Can't connect" + error);
    process.exit(1);
});